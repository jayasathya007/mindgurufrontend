{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JOHNBOND007\\\\OneDrive\\\\Desktop\\\\Project collab\\\\online\\\\src\\\\Components\\\\Report.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import './Css/Report.css';\n\n// const StudentReports = () => {\n//   const [reports, setReports] = useState([]);\n//   const [search, setSearch] = useState(\"\");\n//   const[Users, setUsers] =useState([])\n//   const[Marks, setMarks] = useState([])\n\n//   useEffect(() => {\n//     fetch('http://localhost:8000/student-reports/')\n//       .then((response) => response.json())\n//       .then((data) => setReports(data))\n//       .catch((error) => console.error('Error fetching data:', error));\n//   }, []);\n\n//   const reports = Marks.filter(\n//     (mark) =>\n//       get_student_name(mark.student).toLowerCase().includes(search.toLowerCase()) ||\n//       mark.subject.toLowerCase().includes(search.toLowerCase()) ||\n//       (mark.score ? mark.score.toString().toLowerCase().includes(search.toLowerCase()) : false) // ✅ Prevent null error\n//   );\n\n//   return (\n//     <div className=\"reports-container\">\n//       <header>      \n//         <h1>Student Marks Reports</h1>\n//       </header>\n//       <div className=\"search-bar\">\n//         <input type=\"text\" id=\"search-input\" placeholder=\"Search users...\" \n//                 value={search}\n//                 onChange={(e) => setSearch(e.target.value)} />\n//         {/* <button >Search</button> */}\n//       </div>\n//       <table className=\"reports-table\">\n//         <thead>\n//           <tr>\n//             <th>Student Name</th>\n//             <th>Exam</th>\n//             <th>Marks Obtained</th>\n//             <th>Submission Time</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {reports.map((report, index) => (\n//             <tr key={index}>\n//               <td>{report.student_name}</td>\n//               <td>{report.exam.subject_name}</td>\n//               <td>{report.marks_obtained}</td>\n//               <td>{new Date(report.submitted_at).toLocaleString()}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default StudentReports;\n\nimport React, { useEffect, useState } from 'react';\nimport './Css/Report.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StudentReports = () => {\n  _s();\n  const [reports, setReports] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  useEffect(() => {\n    fetch('http://localhost:8000/student-reports/').then(response => response.json()).then(data => setReports(data)).catch(error => console.error('Error fetching data:', error));\n  }, []);\n\n  // ✅ filter directly on fetched reports\n  const filteredReports = reports.filter(report => {\n    var _report$exam;\n    return report.student_name && report.student_name.toLowerCase().includes(search.toLowerCase()) || ((_report$exam = report.exam) === null || _report$exam === void 0 ? void 0 : _report$exam.subject_name) && report.exam.subject_name.toLowerCase().includes(search.toLowerCase()) || report.marks_obtained !== null && report.marks_obtained.toString().includes(search);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reports-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Student Marks Reports\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"search-input\",\n        placeholder: \"Search reports...\",\n        value: search,\n        onChange: e => setSearch(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"reports-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Student Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Exam\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Marks Obtained\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Submission Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filteredReports.map((report, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: report.student_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: report.exam.subject_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: report.marks_obtained\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(report.submitted_at).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(StudentReports, \"iJ1eUkeckEVNiGXgctSSjuHQSZU=\");\n_c = StudentReports;\nexport default StudentReports;\nvar _c;\n$RefreshReg$(_c, \"StudentReports\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","StudentReports","_s","reports","setReports","search","setSearch","fetch","then","response","json","data","catch","error","console","filteredReports","filter","report","_report$exam","student_name","toLowerCase","includes","exam","subject_name","marks_obtained","toString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","id","placeholder","value","onChange","e","target","map","index","Date","submitted_at","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/JOHNBOND007/OneDrive/Desktop/Project collab/online/src/Components/Report.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import './Css/Report.css';\n\n// const StudentReports = () => {\n//   const [reports, setReports] = useState([]);\n//   const [search, setSearch] = useState(\"\");\n//   const[Users, setUsers] =useState([])\n//   const[Marks, setMarks] = useState([])\n\n//   useEffect(() => {\n//     fetch('http://localhost:8000/student-reports/')\n//       .then((response) => response.json())\n//       .then((data) => setReports(data))\n//       .catch((error) => console.error('Error fetching data:', error));\n//   }, []);\n\n//   const reports = Marks.filter(\n//     (mark) =>\n//       get_student_name(mark.student).toLowerCase().includes(search.toLowerCase()) ||\n//       mark.subject.toLowerCase().includes(search.toLowerCase()) ||\n//       (mark.score ? mark.score.toString().toLowerCase().includes(search.toLowerCase()) : false) // ✅ Prevent null error\n//   );\n\n//   return (\n//     <div className=\"reports-container\">\n//       <header>      \n//         <h1>Student Marks Reports</h1>\n//       </header>\n//       <div className=\"search-bar\">\n//         <input type=\"text\" id=\"search-input\" placeholder=\"Search users...\" \n//                 value={search}\n//                 onChange={(e) => setSearch(e.target.value)} />\n//         {/* <button >Search</button> */}\n//       </div>\n//       <table className=\"reports-table\">\n//         <thead>\n//           <tr>\n//             <th>Student Name</th>\n//             <th>Exam</th>\n//             <th>Marks Obtained</th>\n//             <th>Submission Time</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {reports.map((report, index) => (\n//             <tr key={index}>\n//               <td>{report.student_name}</td>\n//               <td>{report.exam.subject_name}</td>\n//               <td>{report.marks_obtained}</td>\n//               <td>{new Date(report.submitted_at).toLocaleString()}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default StudentReports;\n\n\n\nimport React, { useEffect, useState } from 'react';\nimport './Css/Report.css';\n\nconst StudentReports = () => {\n  const [reports, setReports] = useState([]);\n  const [search, setSearch] = useState(\"\");\n\n  useEffect(() => {\n    fetch('http://localhost:8000/student-reports/')\n      .then((response) => response.json())\n      .then((data) => setReports(data))\n      .catch((error) => console.error('Error fetching data:', error));\n  }, []);\n\n  // ✅ filter directly on fetched reports\n  const filteredReports = reports.filter(\n    (report) =>\n      (report.student_name && report.student_name.toLowerCase().includes(search.toLowerCase())) ||\n      (report.exam?.subject_name && report.exam.subject_name.toLowerCase().includes(search.toLowerCase())) ||\n      (report.marks_obtained !== null && report.marks_obtained.toString().includes(search))\n  );\n\n  return (\n    <div className=\"reports-container\">\n      <header>      \n        <h1>Student Marks Reports</h1>\n      </header>\n      <div className=\"search-bar\">\n        <input \n          type=\"text\" \n          id=\"search-input\" \n          placeholder=\"Search reports...\" \n          value={search}\n          onChange={(e) => setSearch(e.target.value)} \n        />\n      </div>\n      <table className=\"reports-table\">\n        <thead>\n          <tr>\n            <th>Student Name</th>\n            <th>Exam</th>\n            <th>Marks Obtained</th>\n            <th>Submission Time</th>\n          </tr>\n        </thead>\n        <tbody>\n          {filteredReports.map((report, index) => (\n            <tr key={index}>\n              <td>{report.student_name}</td>\n              <td>{report.exam.subject_name}</td>\n              <td>{report.marks_obtained}</td>\n              <td>{new Date(report.submitted_at).toLocaleString()}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default StudentReports;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
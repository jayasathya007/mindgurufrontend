{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\JOHNBOND007\\\\OneDrive\\\\Desktop\\\\Project collab\\\\online\\\\src\\\\Components\\\\Mchoiceexam.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Css/Mchoice.css';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { toast, ToastContainer } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ObjectiveExamStart = ({}) => {\n  _s();\n  const studentName = localStorage.getItem(\"username\");\n  const {\n    examId\n  } = useParams(); // get examId from URL\n  const navigate = useNavigate();\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [exam, setExam] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [timeLeft, setTimeLeft] = useState(0);\n\n  // Fetch exam data on component mount\n  useEffect(() => {\n    if (examId) {\n      axios.get(`http://127.0.0.1:8000/api/get-exam/${examId}/`).then(response => {\n        setExam(response.data);\n        setTimeLeft(response.data.time_limit * 60); // set time in seconds\n        setLoading(false);\n      }).catch(error => {\n        console.error('Error fetching exam:', error);\n      });\n    }\n  }, [examId]);\n\n  // Timer countdown\n  useEffect(() => {\n    if (timeLeft <= 0) {\n      if (!loading) handleSubmit(); // avoid auto-submit before exam is loaded\n      return;\n    }\n    const timerInterval = setInterval(() => {\n      setTimeLeft(prev => prev - 1);\n    }, 1000);\n    return () => clearInterval(timerInterval);\n  }, [timeLeft, loading]);\n  const handleAnswerChange = (questionIndex, option) => {\n    setAnswers(prev => ({\n      ...prev,\n      [questionIndex]: option\n    }));\n  };\n  const handleSubmit = () => {\n    const payload = {\n      student_name: studentName,\n      exam: examId,\n      answers: answers\n    };\n    axios.post('http://127.0.0.1:8000/api/submit-answers/', payload).then(res => {\n      // alert('Exam submitted successfully!');\n      toast.success('Exam submitted successfully!');\n      setTimeout(() => {\n        navigate(\"/thanks\");\n      }, 1500);\n    }).catch(error => {\n      console.error(error);\n      if (error.response && error.response.data.error) {\n        setErrorMessage(error.response.data.error); // Set the error message\n        toast.error(error.response.data.error || \"Something Went Wrong or Network Issue!\");\n      } else {\n        setErrorMessage(\"An unexpected error occurred. Please try again.\");\n        toast.error(error.response.data.error || \"An unexpected error occurred. Please try again.\");\n      }\n    });\n  };\n  if (loading || !exam) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading exam...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 32\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"exam-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [exam.subject_name, \" Exam\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Time Left: \", Math.floor(timeLeft / 60), \":\", String(timeLeft % 60).padStart(2, '0')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), exam.questions && exam.questions.map((q, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: q.question_text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), ['A', 'B', 'C', 'D'].map(opt => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: `q${index}`,\n          value: opt,\n          onChange: () => handleAnswerChange(index, opt),\n          checked: answers[index] === opt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this), q[`option_${opt.toLowerCase()}`]]\n      }, opt, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this))]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit Exam\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(ObjectiveExamStart, \"AezAh5Qlq8aMd3ecFOepV/c69FY=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ObjectiveExamStart;\nexport default ObjectiveExamStart;\nvar _c;\n$RefreshReg$(_c, \"ObjectiveExamStart\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","useNavigate","toast","ToastContainer","jsxDEV","_jsxDEV","ObjectiveExamStart","_s","studentName","localStorage","getItem","examId","navigate","errorMessage","setErrorMessage","exam","setExam","loading","setLoading","currentQuestionIndex","setCurrentQuestionIndex","answers","setAnswers","timeLeft","setTimeLeft","get","then","response","data","time_limit","catch","error","console","handleSubmit","timerInterval","setInterval","prev","clearInterval","handleAnswerChange","questionIndex","option","payload","student_name","post","res","success","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","className","subject_name","Math","floor","String","padStart","questions","map","q","index","question_text","opt","type","name","value","onChange","checked","toLowerCase","onClick","_c","$RefreshReg$"],"sources":["C:/Users/JOHNBOND007/OneDrive/Desktop/Project collab/online/src/Components/Mchoiceexam.jsx"],"sourcesContent":["import React, { useState, useEffect} from 'react';\nimport axios from 'axios';\nimport './Css/Mchoice.css';\nimport { useParams, useNavigate  } from 'react-router-dom';\nimport { toast,ToastContainer } from 'react-toastify';\n\n\nconst ObjectiveExamStart = ({  }) => {\n  const studentName = localStorage.getItem(\"username\")\n  const { examId } = useParams();  // get examId from URL\n  const navigate = useNavigate();\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [exam, setExam] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [timeLeft, setTimeLeft] = useState(0);\n\n  // Fetch exam data on component mount\n  useEffect(() => {\n    if (examId) {\n      axios.get(`http://127.0.0.1:8000/api/get-exam/${examId}/`)\n        .then(response => {\n          setExam(response.data);\n          setTimeLeft(response.data.time_limit * 60); // set time in seconds\n          setLoading(false);\n        })\n        .catch(error => {\n          console.error('Error fetching exam:', error);\n        });\n    }\n  }, [examId]);\n\n  // Timer countdown\n  useEffect(() => {\n    if (timeLeft <= 0) {\n      if (!loading) handleSubmit();  // avoid auto-submit before exam is loaded\n      return;\n    }\n\n    const timerInterval = setInterval(() => {\n      setTimeLeft(prev => prev - 1);\n    }, 1000);\n\n    return () => clearInterval(timerInterval);\n  }, [timeLeft, loading]);\n\n  const handleAnswerChange = (questionIndex, option) => {\n    setAnswers(prev => ({ ...prev, [questionIndex]: option }));\n  };\n\n  const handleSubmit = () => {\n    const payload = {\n      student_name: studentName,\n      exam: examId,\n      answers: answers\n    };\n\n    axios.post('http://127.0.0.1:8000/api/submit-answers/', payload)\n      .then(res => {\n        // alert('Exam submitted successfully!');\n        toast.success('Exam submitted successfully!');\n        setTimeout(()=>{\n          navigate(\"/thanks\")\n        }, 1500)\n        ;\n      })\n      .catch((error) => {\n        console.error(error)\n        if (error.response && error.response.data.error) {\n              setErrorMessage(error.response.data.error); // Set the error message\n              toast.error(error.response.data.error || \"Something Went Wrong or Network Issue!\")\n        } else {\n              setErrorMessage(\"An unexpected error occurred. Please try again.\");\n              toast.error(error.response.data.error || \"An unexpected error occurred. Please try again.\")\n            }\n       });\n  };\n\n  if (loading || !exam) return <p>Loading exam...</p>;\n\n  return (\n    <div className='exam-form'>\n      <h1>{exam.subject_name} Exam</h1>\n      <h2>Time Left: {Math.floor(timeLeft / 60)}:{String(timeLeft % 60).padStart(2, '0')}</h2>\n\n      {exam.questions && exam.questions.map((q, index) => (\n        <div key={index}>\n          <h4>{q.question_text}</h4>\n          {['A', 'B', 'C', 'D'].map(opt => (\n            <label key={opt}>\n              <input\n                type=\"radio\"\n                name={`q${index}`}\n                value={opt}\n                onChange={() => handleAnswerChange(index, opt)}\n                checked={answers[index] === opt}\n              />\n              {q[`option_${opt.toLowerCase()}`]}\n            </label>\n          ))}\n        </div>\n      ))}\n\n      <button onClick={handleSubmit}>Submit Exam</button>\n      <ToastContainer />\n    </div>\n  );\n};\n\nexport default ObjectiveExamStart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}